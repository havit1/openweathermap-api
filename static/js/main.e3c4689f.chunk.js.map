{"version":3,"sources":["components/Search/Search.jsx","components/UsersCityWeather/UsersCityWeather.jsx","components/PageContent/PageContentRender.jsx","components/PageContent/PageContent.jsx","App.jsx","serviceWorker.js","index.js","utils/httpService.js"],"names":["Search","state","searchedLine","searchedCityWeather","onSearchChange","e","setState","target","value","onHandleSearch","preventDefault","search","length","props","closeDetailedInfo","getSearchedWeatherInfo","searchedCity","a","undefined","getSearchedCityWeather","console","log","http","get","searchedCityInfo","data","this","className","type","onChange","onClick","Component","UsersCityWeather","getDayName","dateString","split","join","Date","getDay","getWeatherForFutureDays","weatherListArray","weatherForNextDays","weatherListTest","i","weatherListNextDay","filter","day","dt_txt","push","splice","indexOf","getMinMaxTemp","tempList","minMaxWeatherForEachDay","map","maxTemp","main","temp_max","minTemp","temp_min","date","icon","weather","time","Math","round","cityInfo","navigator","geolocation","getCurrentPosition","pos","getWeather","coords","latitude","longitude","userWeather","err","warn","code","message","enableHighAccuracy","timeout","maximumAge","weatherInfo","getUserWeather","list","city","name","country","temp","alt","src","humidity","wind","speed","item","key","CityCard","React","lazy","DetailedInfo","PageContentRender","onMainBtnClick","_onButtonClick","changeButtonColor","handleLike","showComponent","showPage","showUserLocationWindow","onCloseUserLocationWindow","geolocationEnabled","Fragment","Suspense","fallback","id","PageContent","incomeCityId","_cities","clickedCity","find","index","localStorage","setItem","JSON","stringify","getWeatherInfo","citiesList","idsToSearch","getItem","parse","baseCitiesList","getCitiesFromLS","cities","permissions","query","then","status","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","ready","unregister","reload","checkValidServiceWorker","axios","interceptors","use","toast","Promise","reject","post","put","delete"],"mappings":"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","file":"static/js/main.e3c4689f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport http from \"../../utils/httpService\";\r\nimport \"./Search.scss\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    searchedLine: \"\",\r\n    searchedCityWeather: {}\r\n  };\r\n\r\n  onSearchChange = e => {\r\n    this.setState({ searchedLine: e.target.value });\r\n  };\r\n\r\n  onHandleSearch = e => {\r\n    e.preventDefault();\r\n    const search =\r\n      this.state.searchedLine.length > 0\r\n        ? this.state.searchedLine\r\n        : null;\r\n    this.props.closeDetailedInfo();\r\n    this.getSearchedWeatherInfo(search);\r\n  };\r\n\r\n  // citiesList.find(city => city.name === this.state.searchedLine)\r\n\r\n  getSearchedWeatherInfo = async searchedCity => {\r\n    if (searchedCity === undefined) {\r\n      this.props.getSearchedCityWeather(null);\r\n      return;\r\n    } else if (searchedCity === null) return null;\r\n\r\nconsole.log(searchedCity);\r\n\r\n\r\n    const searchedCityInfo = await http.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${searchedCity}&units=metric&APPID=97ea200bf11177ab3c207304b3be2608`\r\n    );\r\n    this.props.getSearchedCityWeather(searchedCityInfo.data);\r\n  };\r\n\r\n  render() {\r\n    const { onSearchChange, onHandleSearch } = this;\r\n\r\n    return (\r\n      <form className=\"search-bar\">\r\n        <input\r\n          className=\"search-bar__input\"\r\n          type=\"text\"\r\n          onChange={onSearchChange}\r\n        />\r\n        <button className=\"search-bar__btn\" onClick={onHandleSearch}>\r\n          Find\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport http from \"../../utils/httpService\";\r\nimport \"./UserCityWeather.scss\";\r\n\r\nclass UsersCityWeather extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      cityInfo: []\r\n    };\r\n  }\r\n\r\n  getUserWeather() {\r\n    navigator.geolocation.getCurrentPosition(\r\n      async pos => {\r\n        const userWeather = await this.getWeather(\r\n          pos.coords.latitude,\r\n          pos.coords.longitude\r\n        );\r\n        this.setState({ cityInfo: userWeather });\r\n      },\r\n      err => console.warn(`ERROR(${err.code}): ${err.message}`),\r\n      { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }\r\n    );\r\n  }\r\n\r\n  getWeather(latitude, longitude) {\r\n    return http.get(\r\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=metric&APPID=97ea200bf11177ab3c207304b3be2608`\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.weatherInfo) return;\r\n    this.getUserWeather();\r\n  }\r\n\r\n  getDayName = dateString => {\r\n    dateString.split(\" \").join(\"T\");\r\n    const days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\"\r\n    ];\r\n    const d = new Date(dateString);\r\n    const dayName = days[d.getDay()];\r\n    return dayName;\r\n  };\r\n\r\n  getWeatherForFutureDays = weatherListArray => {\r\n    const weatherForNextDays = [];\r\n    const weatherListTest = [...weatherListArray];\r\n\r\n    for (let i = 0; i < weatherListTest.length; i++) {\r\n      const weatherListNextDay = weatherListTest.filter(\r\n        day =>\r\n          new Date(weatherListTest[0].dt_txt.split(\" \").join(\"T\")).getDay() ===\r\n          new Date(day.dt_txt.split(\" \").join(\"T\")).getDay()\r\n      );\r\n\r\n      weatherForNextDays.push(weatherListNextDay);\r\n\r\n      weatherListTest.splice(\r\n        weatherListTest.indexOf(weatherListNextDay[0]),\r\n        weatherListTest.indexOf(\r\n          weatherListNextDay[weatherListNextDay.length - 1]\r\n        ) + 1\r\n      );\r\n    }\r\n    weatherForNextDays.splice(0, 1);\r\n\r\n    const minMaxTemp = this.getMinMaxTemp(weatherForNextDays);\r\n\r\n    return minMaxTemp;\r\n  };\r\n\r\n  getMinMaxTemp = tempList => {\r\n    const minMaxWeatherForEachDay = [];\r\n\r\n    tempList.map(day => {\r\n      let maxTemp = day[0].main.temp_max,\r\n        minTemp = day[0].main.temp_min,\r\n        date = day[0].dt_txt,\r\n        icon = day[0].weather[0].icon;\r\n      day.map(time => {\r\n        if (time.main.temp_max > maxTemp)\r\n          maxTemp = Math.round(time.main.temp_max);\r\n        if (time.main.temp_min < minTemp)\r\n          minTemp = Math.round(time.main.temp_min);\r\n      });\r\n      minMaxWeatherForEachDay.push({ minTemp, maxTemp, date, icon });\r\n    });\r\n    return minMaxWeatherForEachDay;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"user-info\">\r\n        {this.state.cityInfo.length === 0 ? (\r\n          <div className=\"lds-ripple\">\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"user-info__wrapper\">\r\n            <div className=\"user-info__today\">\r\n              <h3 className=\"user-info__today-header\">\r\n                {this.getDayName(this.state.cityInfo.data.list[0].dt_txt)}\r\n              </h3>\r\n              <h4>\r\n                {this.state.cityInfo.data.city.name},{\" \"}\r\n                {this.state.cityInfo.data.city.country}\r\n              </h4>\r\n              <div className=\"user-info__today-temp-icon\">\r\n                <h1>\r\n                  {Math.round(this.state.cityInfo.data.list[0].main.temp)}°C\r\n                </h1>\r\n                <img\r\n                  alt=\"/\"\r\n                  src={`http://openweathermap.org/img/wn/${this.state.cityInfo.data.list[0].weather[0].icon}@2x.png`}\r\n                ></img>\r\n              </div>\r\n              <div className=\"user-info__today-additional\">\r\n                <span>\r\n                  Humidity: {this.state.cityInfo.data.list[0].main.humidity}\r\n                </span>\r\n                <span>Wind: {this.state.cityInfo.data.list[0].wind.speed}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"user-info__nextdays\">\r\n              {this.getWeatherForFutureDays(this.state.cityInfo.data.list).map(\r\n                item => (\r\n                  <div className=\"user-info__nextdays-nextday\" key={item.date}>\r\n                    <h3 className=\"user-info__nextdays-nextday-header\">\r\n                      {this.getDayName(item.date)}\r\n                    </h3>\r\n                    <img\r\n                      alt=\"/\"\r\n                      src={`http://openweathermap.org/img/wn/${item.icon}@2x.png`}\r\n                    ></img>\r\n                    <div className=\"user-info__nextdays-nextday-temperature\">\r\n                      <div>{item.maxTemp}°C</div>\r\n                      <div>{item.minTemp}°</div>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UsersCityWeather;\r\n","import React from \"react\";\r\nimport Search from \"../Search/Search\";\r\nimport UsersCityWeather from \"../UsersCityWeather/UsersCityWeather\";\r\nimport \"./PageContent.scss\";\r\n\r\nconst CityCard = React.lazy(() => import(\"../CityCard/CityCard\"));\r\nconst DetailedInfo = React.lazy(() => import(\"../DetailedInfo/DetailedInfo\"));\r\n\r\nconst PageContentRender = ({\r\n  onMainBtnClick,\r\n  closeDetailedInfo,\r\n  _onButtonClick,\r\n  changeButtonColor,\r\n  handleLike,\r\n  showComponent,\r\n  showPage,\r\n  data,\r\n  showUserLocationWindow,\r\n  onCloseUserLocationWindow,\r\n  geolocationEnabled,\r\n  getSearchedCityWeather,\r\n  searchedCityInfo\r\n}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        <header className=\"header\">\r\n          <button className=\"header__home-button\" onClick={onMainBtnClick}>\r\n            Home\r\n          </button>\r\n          <Search\r\n            closeDetailedInfo={closeDetailedInfo}\r\n            getSearchedCityWeather={getSearchedCityWeather}\r\n          ></Search>\r\n        </header>\r\n        {!showComponent ? (\r\n          <main className=\"main-content-wrapper\">\r\n            {geolocationEnabled === \"granted\" ? (\r\n              <div>\r\n                {showUserLocationWindow ? (\r\n                  <UsersCityWeather\r\n                    showComponent={_onButtonClick}\r\n                  ></UsersCityWeather>\r\n                ) : null}\r\n                <div\r\n                  className=\"main-content__show-info-button\"\r\n                  onClick={onCloseUserLocationWindow}\r\n                >\r\n                  {showUserLocationWindow ? \"Hide\" : \"Show\"} weather in your\r\n                  location\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            <div className=\"main-content\">\r\n              {searchedCityInfo !== null ? (\r\n                searchedCityInfo.length !== 0 ? (\r\n                  <React.Suspense fallback={<div></div>}>\r\n                    <CityCard\r\n                      changeButtonColor={changeButtonColor}\r\n                      key={searchedCityInfo.id}\r\n                      cityInfo={searchedCityInfo}\r\n                      handleLike={handleLike}\r\n                      showComponent={_onButtonClick}\r\n                    ></CityCard>\r\n                  </React.Suspense>\r\n                ) : (\r\n                  data.map(city => (\r\n                    <React.Suspense fallback={<div></div>}>\r\n                      <CityCard\r\n                        changeButtonColor={changeButtonColor}\r\n                        key={city.id}\r\n                        cityInfo={city}\r\n                        handleLike={handleLike}\r\n                        showComponent={_onButtonClick}\r\n                      ></CityCard>\r\n                    </React.Suspense>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <h1>No such city or misspelled name</h1>\r\n              )}\r\n            </div>\r\n          </main>\r\n        ) : (\r\n          <React.Fragment>\r\n            <button\r\n              className=\"detailed-info__button\"\r\n              onClick={closeDetailedInfo}\r\n            >\r\n              ←\r\n            </button>\r\n            <React.Suspense fallback={<div>Loading..</div>}>\r\n              <DetailedInfo city={showPage}></DetailedInfo>\r\n            </React.Suspense>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PageContentRender;\r\n","import React, { Component } from \"react\";\r\nimport http from \"../../utils/httpService\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport PageContentRender from \"./PageContentRender\";\r\n\r\nclass PageContent extends Component {\r\n  state = {\r\n    data: [],\r\n    searchedCityInfo: [],\r\n    searchedCity: \"\",\r\n    showPage: \"\",\r\n    showUserLocationWindow: true,\r\n    geolocationEnabled: false,\r\n    showComponent: false\r\n  };\r\n\r\n  getCitiesFromLS() {\r\n    //good\r\n    if (!localStorage.getItem(\"Cities\")) {\r\n      return [\r\n        { id: \"7532072\" },\r\n        { id: \"7533415\" },\r\n        { id: \"6695624\" },\r\n        { id: \"7530738\" },\r\n        { id: \"773357\" },\r\n        { id: \"7530729\" },\r\n        { id: \"7531906\" },\r\n        { id: \"3081046\" },\r\n        { id: \"7530984\" },\r\n        { id: \"7531734\" }\r\n      ];\r\n    } else return JSON.parse(localStorage.getItem(\"Cities\"));\r\n  }\r\n\r\n  handleLike = incomeCityId => {\r\n    let _cities = [...this.state.data];\r\n    const clickedCity = this.state.data.find(city => city.id === incomeCityId);\r\n    const index = _cities.indexOf(clickedCity);\r\n    if (clickedCity !== undefined) {\r\n      _cities.splice(index, 1);\r\n    } else {\r\n      _cities.push(this.state.searchedCityInfo);\r\n    }\r\n    this.setState({ data: _cities });\r\n    localStorage.setItem(\"Cities\", JSON.stringify(_cities));\r\n  };\r\n\r\n  changeButtonColor = incomeCityId => {\r\n    const clickedCity = this.state.data.find(city => city.id === incomeCityId);\r\n    return clickedCity !== undefined ? true : false;\r\n  };\r\n\r\n  getWeatherInfo = citiesList => {\r\n    if (!citiesList) return null;\r\n\r\n    let idsToSearch = citiesList.map(city => city.id).join(\",\");\r\n\r\n    return http.get(\r\n      `https://api.openweathermap.org/data/2.5/group?id=${idsToSearch}&units=metric&APPID=97ea200bf11177ab3c207304b3be2608`\r\n    );\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const baseCitiesList = this.getCitiesFromLS();\r\n    const weatherInfo = await this.getWeatherInfo(baseCitiesList);\r\n    this.setState({ data: weatherInfo.data.list, cities: baseCitiesList });\r\n    navigator.permissions.query({ name: \"geolocation\" }).then(status => {\r\n      this.setState({ geolocationEnabled: status.state });\r\n    });\r\n  }\r\n\r\n  getSearchedCityWeather = searchedCityInfo => {\r\n    this.setState({ searchedCityInfo });\r\n  };\r\n\r\n  _onButtonClick = id => {\r\n    const showComponent = !this.state.showComponent;\r\n    this.setState({\r\n      showComponent\r\n    });\r\n    this.setState({ showPage: id });\r\n  };\r\n\r\n  closeDetailedInfo = () => {\r\n    this.setState({ showComponent: false }, this.setState({ showPage: \"\" }));\r\n  };\r\n\r\n  onMainBtnClick = () => {\r\n    this.closeDetailedInfo();\r\n    this.setState({ searchedCityInfo: [] });\r\n  };\r\n\r\n  onCloseUserLocationWindow = () => {\r\n    this.setState({\r\n      showUserLocationWindow: !this.state.showUserLocationWindow\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer />\r\n        <PageContentRender\r\n          {...this}\r\n          {...this.props}\r\n          {...this.state}\r\n        ></PageContentRender>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageContent;\r\n","import React from \"react\";\r\nimport PageContent from \"./components/PageContent/PageContent\";\r\n\r\nfunction App() {\r\n  return <PageContent />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nserviceWorker.register();\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    console.log(\"Logging the error\", error);\r\n    toast.error(\"An unexpected error occurred\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete\r\n};\r\n"],"sourceRoot":""}